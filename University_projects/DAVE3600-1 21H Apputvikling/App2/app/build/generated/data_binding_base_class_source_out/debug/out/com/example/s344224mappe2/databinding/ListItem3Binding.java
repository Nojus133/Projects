// Generated by view binder compiler. Do not edit!
package com.example.s344224mappe2.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.s344224mappe2.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItem3Binding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton deleteItem3;

  @NonNull
  public final TextView textBestillingAdresse;

  @NonNull
  public final TextView textBestillingDato;

  @NonNull
  public final TextView textBestillingId;

  @NonNull
  public final TextView textBestillingNavn;

  @NonNull
  public final TextView textBestillingPersoner;

  @NonNull
  public final TextView textBestillingTid;

  private ListItem3Binding(@NonNull RelativeLayout rootView, @NonNull ImageButton deleteItem3,
      @NonNull TextView textBestillingAdresse, @NonNull TextView textBestillingDato,
      @NonNull TextView textBestillingId, @NonNull TextView textBestillingNavn,
      @NonNull TextView textBestillingPersoner, @NonNull TextView textBestillingTid) {
    this.rootView = rootView;
    this.deleteItem3 = deleteItem3;
    this.textBestillingAdresse = textBestillingAdresse;
    this.textBestillingDato = textBestillingDato;
    this.textBestillingId = textBestillingId;
    this.textBestillingNavn = textBestillingNavn;
    this.textBestillingPersoner = textBestillingPersoner;
    this.textBestillingTid = textBestillingTid;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItem3Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItem3Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item3, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItem3Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.delete_item3;
      ImageButton deleteItem3 = ViewBindings.findChildViewById(rootView, id);
      if (deleteItem3 == null) {
        break missingId;
      }

      id = R.id.text_bestilling_adresse;
      TextView textBestillingAdresse = ViewBindings.findChildViewById(rootView, id);
      if (textBestillingAdresse == null) {
        break missingId;
      }

      id = R.id.text_bestilling_dato;
      TextView textBestillingDato = ViewBindings.findChildViewById(rootView, id);
      if (textBestillingDato == null) {
        break missingId;
      }

      id = R.id.text_bestilling_id;
      TextView textBestillingId = ViewBindings.findChildViewById(rootView, id);
      if (textBestillingId == null) {
        break missingId;
      }

      id = R.id.text_bestilling_navn;
      TextView textBestillingNavn = ViewBindings.findChildViewById(rootView, id);
      if (textBestillingNavn == null) {
        break missingId;
      }

      id = R.id.text_bestilling_personer;
      TextView textBestillingPersoner = ViewBindings.findChildViewById(rootView, id);
      if (textBestillingPersoner == null) {
        break missingId;
      }

      id = R.id.text_bestilling_tid;
      TextView textBestillingTid = ViewBindings.findChildViewById(rootView, id);
      if (textBestillingTid == null) {
        break missingId;
      }

      return new ListItem3Binding((RelativeLayout) rootView, deleteItem3, textBestillingAdresse,
          textBestillingDato, textBestillingId, textBestillingNavn, textBestillingPersoner,
          textBestillingTid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
