// Generated by view binder compiler. Do not edit!
package com.example.s344224mappe3.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.s344224mappe3.R;
import com.google.android.material.chip.Chip;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView adresse;

  @NonNull
  public final TextView antallEtasjer;

  @NonNull
  public final TextView arrow;

  @NonNull
  public final TextView beskrivelse;

  @NonNull
  public final TextView beskrivelseLabel;

  @NonNull
  public final Chip chipDelete;

  @NonNull
  public final Chip chipEndre;

  @NonNull
  public final ConstraintLayout expandable;

  @NonNull
  public final TextView husNr;

  @NonNull
  public final ConstraintLayout itemContainer;

  @NonNull
  public final TextView koordinater;

  private ListItemBinding(@NonNull LinearLayout rootView, @NonNull TextView adresse,
      @NonNull TextView antallEtasjer, @NonNull TextView arrow, @NonNull TextView beskrivelse,
      @NonNull TextView beskrivelseLabel, @NonNull Chip chipDelete, @NonNull Chip chipEndre,
      @NonNull ConstraintLayout expandable, @NonNull TextView husNr,
      @NonNull ConstraintLayout itemContainer, @NonNull TextView koordinater) {
    this.rootView = rootView;
    this.adresse = adresse;
    this.antallEtasjer = antallEtasjer;
    this.arrow = arrow;
    this.beskrivelse = beskrivelse;
    this.beskrivelseLabel = beskrivelseLabel;
    this.chipDelete = chipDelete;
    this.chipEndre = chipEndre;
    this.expandable = expandable;
    this.husNr = husNr;
    this.itemContainer = itemContainer;
    this.koordinater = koordinater;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adresse;
      TextView adresse = ViewBindings.findChildViewById(rootView, id);
      if (adresse == null) {
        break missingId;
      }

      id = R.id.antall_etasjer;
      TextView antallEtasjer = ViewBindings.findChildViewById(rootView, id);
      if (antallEtasjer == null) {
        break missingId;
      }

      id = R.id.arrow;
      TextView arrow = ViewBindings.findChildViewById(rootView, id);
      if (arrow == null) {
        break missingId;
      }

      id = R.id.beskrivelse;
      TextView beskrivelse = ViewBindings.findChildViewById(rootView, id);
      if (beskrivelse == null) {
        break missingId;
      }

      id = R.id.beskrivelseLabel;
      TextView beskrivelseLabel = ViewBindings.findChildViewById(rootView, id);
      if (beskrivelseLabel == null) {
        break missingId;
      }

      id = R.id.chip_delete;
      Chip chipDelete = ViewBindings.findChildViewById(rootView, id);
      if (chipDelete == null) {
        break missingId;
      }

      id = R.id.chip_endre;
      Chip chipEndre = ViewBindings.findChildViewById(rootView, id);
      if (chipEndre == null) {
        break missingId;
      }

      id = R.id.expandable;
      ConstraintLayout expandable = ViewBindings.findChildViewById(rootView, id);
      if (expandable == null) {
        break missingId;
      }

      id = R.id.husNr;
      TextView husNr = ViewBindings.findChildViewById(rootView, id);
      if (husNr == null) {
        break missingId;
      }

      id = R.id.itemContainer;
      ConstraintLayout itemContainer = ViewBindings.findChildViewById(rootView, id);
      if (itemContainer == null) {
        break missingId;
      }

      id = R.id.koordinater;
      TextView koordinater = ViewBindings.findChildViewById(rootView, id);
      if (koordinater == null) {
        break missingId;
      }

      return new ListItemBinding((LinearLayout) rootView, adresse, antallEtasjer, arrow,
          beskrivelse, beskrivelseLabel, chipDelete, chipEndre, expandable, husNr, itemContainer,
          koordinater);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
